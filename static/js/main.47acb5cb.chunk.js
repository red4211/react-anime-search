(window["webpackJsonpmy-app"]=window["webpackJsonpmy-app"]||[]).push([[0],{13:function(e,a,n){},14:function(e,a,n){},15:function(e,a,n){"use strict";n.r(a);var t=n(0),r=n.n(t),s=n(2),o=n.n(s),i=(n(13),n(3)),c=n(4),l=n(6),p=n(5),g=n(7);n(14);function h(e){var a=e.mediaList.map(function(e,a){var n={backgroundImage:"url("+e.coverImage.large+")",color:"#cdcdcd"},t=e.genres.map(function(e,a){return r.a.createElement("li",{key:a},e)});return r.a.createElement("li",{key:a},r.a.createElement("a",{href:"#",className:"cover-img",style:n}),r.a.createElement("div",{className:"card-container"},r.a.createElement("p",{className:"card-title"},e.title.english),r.a.createElement("div",{className:"card-info-1"},r.a.createElement("div",null,e.format),r.a.createElement("div",null,e.averageScore+"%")),r.a.createElement("div",{className:"desc"},e.description),r.a.createElement("ul",{className:"genres-list"},t)))});return r.a.createElement("div",{className:"main"},r.a.createElement("div",{className:"btn-container"},r.a.createElement("button",{onClick:e.showPrev,className:"btn-1"},"Back"),r.a.createElement("button",{onClick:e.showNext,className:"btn-1"},"Next")),r.a.createElement("ul",{className:"list"},a))}function m(e){return r.a.createElement("form",{onSubmit:e.runSearch},r.a.createElement("input",{type:"text",placeholder:"search",onChange:e.setSearch,value:e.searchString,className:"search-field"}))}function d(e){var a="ANIME"===e.mediaType?"active":"",n="MANGA"===e.mediaType?"active":"";return r.a.createElement("div",null,r.a.createElement("p",{className:"card-title"},"Type"),r.a.createElement("ul",{className:"type-filter"},r.a.createElement("li",{name:"ANIME",onClick:e.setType,className:a},"Anime"),r.a.createElement("li",{name:"MANGA",onClick:e.setType,className:n},"Manga")))}function u(e){return r.a.createElement("div",null,r.a.createElement("p",{className:"card-title"},"Filters"),r.a.createElement("select",{onChange:e.changeSortBy},r.a.createElement("option",{value:"POPULARITY_DESC"},"Popularity"),r.a.createElement("option",{value:"TITLE_ENGLISH"},"Title"),r.a.createElement("option",{value:"SCORE_DESC"},"Score"),r.a.createElement("option",{value:"SEARCH_MATCH"},"Search match")),r.a.createElement("p",{className:"card-title"},"Season"),r.a.createElement("select",{onChange:e.changeSeason},r.a.createElement("option",{value:""},"All"),r.a.createElement("option",{value:"WINTER"},"Winter"),r.a.createElement("option",{value:"SPRING"},"Spring"),r.a.createElement("option",{value:"SUMMER"},"Summer"),r.a.createElement("option",{value:"FALL"},"Fall")))}var y=function(e){function a(){var e;return Object(i.a)(this,a),(e=Object(l.a)(this,Object(p.a)(a).call(this))).changeSeason=function(a){e.setState({season:a.target.value},function(){var a=e.state.searchString,n=e.state.filterBy,t=e.state.season,r=e.state.mediaType,s=""===a?"":"search: $searchQuery,",o=""===t?"":"season: $season,",i="query RunSearch(".concat((""===a?"":"$searchQuery:String,")+(""===t?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort] ){\n  Page(perPage:10, page: 1){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(s+o," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),c={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:i,variables:{searchQuery:a,mType:r,filterMethod:n,season:t}})};fetch("https://graphql.anilist.co",c).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})})},e.changeSortBy=function(a){e.setState({filterBy:a.target.value},function(){var a=e.state.searchString,n=e.state.filterBy,t=e.state.season,r=e.state.mediaType,s=""===a?"":"search: $searchQuery,",o=""===t?"":"season: $season,",i="query RunSearch(".concat((""===a?"":"$searchQuery:String,")+(""===t?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort] ){\n  Page(perPage:10, page: 1){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(s+o," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),c={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:i,variables:{searchQuery:a,mType:r,filterMethod:n,season:t}})};fetch("https://graphql.anilist.co",c).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})})},e.setType=function(a){var n=a.target.getAttribute("name");e.setState({mediaType:n},function(){var a=e.state.searchString,n=e.state.filterBy,t=e.state.season,r=e.state.mediaType,s=""===a?"":"search: $searchQuery,",o=""===t?"":"season: $season,",i="query RunSearch(".concat((""===a?"":"$searchQuery:String,")+(""===t?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort] ){\n  Page(perPage:10, page: 1){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(s+o," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),c={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:i,variables:{searchQuery:a,mType:r,filterMethod:n,season:t}})};fetch("https://graphql.anilist.co",c).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})})},e.showNext=function(){if(!0===e.state.pageInfo.hasNextPage){var a=e.state.pageInfo.currentPage+1,n=e.state.searchString,t=e.state.filterBy,r=e.state.season,s=e.state.mediaType,o=""===n?"":"search: $searchQuery,",i=""===r?"":"season: $season,",c="query RunSearch(".concat((""===n?"":"$searchQuery:String,")+(""===r?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort], $nextPage:Int){\n  Page(perPage:10, page: $nextPage){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(o+i," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),l={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:c,variables:{searchQuery:n,mType:s,filterMethod:t,season:r,nextPage:a}})};fetch("https://graphql.anilist.co",l).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})}},e.showPrev=function(){if(1!==e.state.pageInfo.currentPage){var a=e.state.pageInfo.currentPage-1,n=e.state.searchString,t=e.state.filterBy,r=e.state.season,s=e.state.mediaType,o=""===n?"":"search: $searchQuery,",i=""===r?"":"season: $season,",c="query RunSearch(".concat((""===n?"":"$searchQuery:String,")+(""===r?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort], $prevPage:Int){\n  Page(perPage:10, page: $prevPage){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(o+i," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),l={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:c,variables:{searchQuery:n,mType:s,filterMethod:t,season:r,prevPage:a}})};fetch("https://graphql.anilist.co",l).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})}},e.setSearch=function(a){e.setState({searchString:a.target.value})},e.runSearch=function(a){a.preventDefault();var n=e.state.searchString,t=e.state.filterBy,r=e.state.season,s=e.state.mediaType,o=""===n?"":"search: $searchQuery,",i=""===r?"":"season: $season,",c="query RunSearch(".concat((""===n?"":"$searchQuery:String,")+(""===r?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort] ){\n  Page(perPage:10, page: 1){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(o+i," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),l={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:c,variables:{searchQuery:n,mType:s,filterMethod:t,season:r}})};fetch("https://graphql.anilist.co",l).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})},e.state={pageInfo:{currentPage:1},mediaList:[],searchString:"",mediaType:"ANIME",filterBy:"POPULARITY_DESC",season:""},e}return Object(g.a)(a,e),Object(c.a)(a,[{key:"componentDidMount",value:function(){var e=this,a=this.state.searchString,n=this.state.filterBy,t=this.state.season,r=this.state.mediaType,s=""===a?"":"search: $searchQuery,",o=""===t?"":"season: $season,",i="query RunSearch(".concat((""===a?"":"$searchQuery:String,")+(""===t?"":"$season:MediaSeason,")," $mType: MediaType, $filterMethod:[MediaSort] ){\n  Page(perPage:10, page: 1){\n    pageInfo {\n      total\n      currentPage\n      lastPage\n      hasNextPage\n      perPage\n    }\n    \n    media(").concat(s+o," type: $mType, sort:$filterMethod){\n    title{\n    english\n  }\n    format,\n    description(asHtml:false),\n    averageScore,\n    studios(isMain:true) {\n      nodes {\n        name\n      }\n    },\n    coverImage {\n      large\n      color\n    },\n    genres\n  }\n  }\n  \n}"),c={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:i,variables:{searchQuery:a,mType:r,filterMethod:n,season:t}})};fetch("https://graphql.anilist.co",c).then(function(e){return e.json()}).then(function(a){e.setState({pageInfo:a.data.Page.pageInfo,mediaList:a.data.Page.media})})}},{key:"render",value:function(){return r.a.createElement("div",{className:"App"},r.a.createElement("aside",null,r.a.createElement(m,{setSearch:this.setSearch,searchString:this.state.searchString,runSearch:this.runSearch}),r.a.createElement(d,{setType:this.setType,mediaType:this.state.mediaType}),r.a.createElement(u,{changeSortBy:this.changeSortBy,changeSeason:this.changeSeason})),r.a.createElement(h,{mediaList:this.state.mediaList,showNext:this.showNext,showPrev:this.showPrev}))}}]),a}(t.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(y,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,a,n){e.exports=n(15)}},[[8,1,2]]]);
//# sourceMappingURL=main.47acb5cb.chunk.js.map